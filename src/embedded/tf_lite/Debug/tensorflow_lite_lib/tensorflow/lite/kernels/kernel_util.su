limits:523:7:static constexpr signed char std::numeric_limits<signed char>::min()	4	static
limits:526:7:static constexpr signed char std::numeric_limits<signed char>::max()	4	static
limits:593:7:static constexpr unsigned char std::numeric_limits<unsigned char>::min()	4	static
limits:596:7:static constexpr unsigned char std::numeric_limits<unsigned char>::max()	4	static
limits:858:7:static constexpr short int std::numeric_limits<short int>::min()	4	static
limits:861:7:static constexpr short int std::numeric_limits<short int>::max()	4	static
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
kernel_util.h:27:12:int tflite::NumDimensions(const TfLiteTensor*)	16	static
kernel_util.h:28:12:int tflite::SizeOfDimension(const TfLiteTensor*, int)	16	static
kernel_util.h:65:16:int64_t tflite::NumElements(const TfLiteIntArray*)	32	static
kernel_util.h:73:16:int64_t tflite::NumElements(const TfLiteTensor*)	24	static
cmath:85:3:constexpr double std::abs(double)	16	static
cmath:1790:3:constexpr float std::round(float)	16	static
kernel_util.cc:27:14:TfLiteStatus tflite::PopulateConvolutionQuantizationParams(TfLiteContext*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, const TfLiteFusedActivation&, int32_t*, int*, int32_t*, int32_t*, int32_t*, int*)	72	static
kernel_util.cc:42:14:TfLiteStatus tflite::PopulateConvolutionQuantizationParams(TfLiteContext*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, const TfLiteFusedActivation&, int32_t*, int*, int32_t*, int32_t*, int32_t*, int*, int)	120	static
kernel_util.cc:117:14:TfLiteStatus tflite::GetQuantizedConvolutionMultipler(TfLiteContext*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, double*)	72	static
kernel_util.cc:155:14:TfLiteStatus tflite::GetQuantizedConvolutionMultipler(TfLiteContext*, const TfLiteTensor*, const TfLiteTensor*, TfLiteTensor*, double*)	48	static
kernel_util.cc:176:46:tflite::{anonymous}::CalculateActivationRangeQuantizedImpl(TfLiteFusedActivation, int32_t, int32_t, TfLiteTensor*, int32_t*, int32_t*)::<lambda(float)>	16	static
stl_algobase.h:219:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long int]	16	static
stl_algobase.h:195:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long int]	16	static
kernel_util.cc:169:6:void tflite::{anonymous}::CalculateActivationRangeQuantizedImpl(TfLiteFusedActivation, int32_t, int32_t, TfLiteTensor*, int32_t*, int32_t*)	64	static
kernel_util.cc:196:14:TfLiteStatus tflite::CalculateActivationRangeQuantized(TfLiteContext*, TfLiteFusedActivation, TfLiteTensor*, int32_t*, int32_t*)	48	static
kernel_util.cc:221:6:bool tflite::HaveSameShapes(const TfLiteTensor*, const TfLiteTensor*)	16	static
stl_algobase.h:219:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = int]	16	static
kernel_util.cc:228:14:TfLiteStatus tflite::CalculateShapeForBroadcast(TfLiteContext*, const TfLiteTensor*, const TfLiteTensor*, TfLiteIntArray**)	80	static
kernel_util.cc:251:14:TfLiteStatus tflite::CalculateShapeForBroadcast(TfLiteContext*, const TfLiteTensor*, const TfLiteTensor*, const TfLiteTensor*, TfLiteIntArray**)	88	static
cppmath.h:35:1:T tflite::TfLiteRound(T) [with T = float]	16	static
move.h:101:5:constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = TfLiteIntArray*&]	16	static
move.h:101:5:constexpr typename std::remove_reference< <template-parameter-1-1> >::type&& std::move(_Tp&&) [with _Tp = void (*&)(TfLiteIntArray*)]	16	static
move.h:76:5:constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = TfLiteIntArray*]	16	static
move.h:76:5:constexpr _Tp&& std::forward(typename std::remove_reference<_From>::type&) [with _Tp = void (*)(TfLiteIntArray*)]	16	static
tuple:114:19:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = void (*)(TfLiteIntArray*); unsigned int _Idx = 1u; _Head = void (*)(TfLiteIntArray*)]	16	static
tuple:360:19:constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(_UHead&&) [with _UHead = void (*)(TfLiteIntArray*); unsigned int _Idx = 1u; _Head = void (*)(TfLiteIntArray*)]	24	static
tuple:114:19:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(_UHead&&) [with _UHead = TfLiteIntArray*; unsigned int _Idx = 0u; _Head = TfLiteIntArray*]	16	static
tuple:211:19:) [with _UHead = TfLiteIntArray*; _UTail = {void (*)(TfLiteIntArray*)}; <template-parameter-2-3> = void; unsigned int _Idx = 0u; _Head = TfLiteIntArray*; _Tail = {void (*)(TfLiteIntArray*)}]	32	static
tuple:930:19:constexpr std::tuple<_T1, _T2>::tuple(_U1&&, _U2&&) [with _U1 = TfLiteIntArray*; _U2 = void (*)(TfLiteIntArray*); typename std::enable_if<((std::_TC<true, _T1, _T2>::_MoveConstructibleTuple<_U1, _U2>() && std::_TC<true, _T1, _T2>::_ImplicitlyMoveConvertibleTuple<_U1, _U2>()) && (! std::is_same<typename std::decay<_U1>::type, std::allocator_arg_t>::value)), bool>::type <anonymous> = 1u; _T1 = TfLiteIntArray*; _T2 = void (*)(TfLiteIntArray*)]	32	static
unique_ptr.h:197:7:std::unique_ptr<_Tp, _Dp>::unique_ptr(std::unique_ptr<_Tp, _Dp>::pointer, typename std::remove_reference<_To>::type&&) [with _Tp = TfLiteIntArray; _Dp = void (*)(TfLiteIntArray*)]	32	static
tuple:142:7:static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with unsigned int _Idx = 0u; _Head = TfLiteIntArray*]	16	static
tuple:190:7:>&) [with unsigned int _Idx = 0u; _Head = TfLiteIntArray*; _Tail = {void (*)(TfLiteIntArray*)}]	16	static
tuple:1247:5:>&) [with unsigned int __i = 0u; _Head = TfLiteIntArray*; _Tail = {void (*)(TfLiteIntArray*)}]	16	static
tuple:1258:5:>&) [with unsigned int __i = 0u; _Elements = {TfLiteIntArray*, void (*)(TfLiteIntArray*)}]	16	static
unique_ptr.h:235:7:std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = TfLiteIntArray; _Dp = void (*)(TfLiteIntArray*)]	24	static
unique_ptr.h:299:7:std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::operator->() const [with _Tp = TfLiteIntArray; _Dp = void (*)(TfLiteIntArray*)]	16	static
unique_ptr.h:328:7:std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::release() [with _Tp = TfLiteIntArray; _Dp = void (*)(TfLiteIntArray*)]	24	static
tuple:142:7:static constexpr _Head& std::_Head_base<_Idx, _Head, false>::_M_head(std::_Head_base<_Idx, _Head, false>&) [with unsigned int _Idx = 1u; _Head = void (*)(TfLiteIntArray*)]	16	static
tuple:346:7:static constexpr _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(std::_Tuple_impl<_Idx, _Head>&) [with unsigned int _Idx = 1u; _Head = void (*)(TfLiteIntArray*)]	16	static
tuple:1247:5:>&) [with unsigned int __i = 1u; _Head = void (*)(TfLiteIntArray*); _Tail = {}]	16	static
tuple:1258:5:>&) [with unsigned int __i = 1u; _Elements = {TfLiteIntArray*, void (*)(TfLiteIntArray*)}]	16	static
unique_ptr.h:312:7:std::unique_ptr<_Tp, _Dp>::deleter_type& std::unique_ptr<_Tp, _Dp>::get_deleter() [with _Tp = TfLiteIntArray; _Dp = void (*)(TfLiteIntArray*)]	16	static
tuple:145:7:static constexpr const _Head& std::_Head_base<_Idx, _Head, false>::_M_head(const std::_Head_base<_Idx, _Head, false>&) [with unsigned int _Idx = 0u; _Head = TfLiteIntArray*]	16	static
tuple:193:7:>&) [with unsigned int _Idx = 0u; _Head = TfLiteIntArray*; _Tail = {void (*)(TfLiteIntArray*)}]	16	static
tuple:1252:5:>&) [with unsigned int __i = 0u; _Head = TfLiteIntArray*; _Tail = {void (*)(TfLiteIntArray*)}]	16	static
tuple:1264:5:>&) [with unsigned int __i = 0u; _Elements = {TfLiteIntArray*, void (*)(TfLiteIntArray*)}]	16	static
unique_ptr.h:307:7:std::unique_ptr<_Tp, _Dp>::pointer std::unique_ptr<_Tp, _Dp>::get() const [with _Tp = TfLiteIntArray; _Dp = void (*)(TfLiteIntArray*)]	16	static
